<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd"> -->
<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<!-- Application Loggers -->
	<logger name="com.board.controller">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
		<!-- JDBC 호출 정보 관련 로그는 OFF 
		https://frozenpond.tistory.com/86
		https://www.leafcats.com/45
		https://rimkongs.tistory.com/312
	-->
	
	<!-- SQL문만을 로그로 남긴다. PreparedStatement의 경우 관련된 argument 값으로 대체된 SQL문 표시
		원래 ?,?,?로 표시되는데, log4j 덕분에 완전한 쿼리를 확인할 수 있다. 
	 -->
	<logger name="jdbc.sqlonly">
		<level value="OFF"/>
	</logger>
	
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming">
		<level value="info"/>
	</logger>
	
	<!-- SQL 결과 조회된 데이터의 table을 테이블 형태의 로그로 남긴다. -->
	<logger name="jdbc.resultsettable">
		<level value="info"/>
	</logger>
	
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보 기록. 특별히 JDBC 문제를 추적할 경우가 아니라면 사용 권장 안함 -->
	<logger name="jdbc.audit">
		<level value="OFF"/>
	</logger>
	
	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 방대한 양의 로그가 생성됨 -->
	<logger name="jdbc.resultset">
		<level value="OFF"/>
	</logger>
	
	<!-- 열려있는 모든 번호화 연결 수립 및 해제 이벤트 기록. (연결 문제를 찾는데 유용하다 Connection Pool 설정) -->
	<logger name="jdbc.connection">
		<level value="OFF"/>
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="info" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
